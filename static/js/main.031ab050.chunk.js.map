{"version":3,"sources":["components/Map/MarkersList/MarkersList.tsx","helpers/hooks.ts","components/Map/Map.tsx","mocked_data/capitals-ltd-lng.ts","store/map.slice.ts","components/Marker/Marker.tsx","pages/Main/Main.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["Item","name","className","MarkersList","markersIntoView","map","marker","label","getLabel","undefined","nanoid","useTypedSelector","useSelector","getMarkersIntoView","markers","bounds","getBounds","position","getPosition","contains","length","Map","onDragEnd","onIdle","children","ref","useRef","useState","setMap","setMarkersIntoView","state","useEffect","current","window","google","maps","center","lat","lng","zoom","forEach","eventName","event","clearListeners","addListener","id","Children","child","isValidElement","cloneElement","capitalsLtdLng","capital","ltd","mapSlice","createSlice","initialState","reducers","addMarker","action","toDeepCompression","find","payload","isEqual","push","removeMarkers","actions","mapReducer","reducer","Marker","options","setMarker","dispatch","useDispatch","setOptions","Main","apiKey","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031ab050.chunk.js","sourcesContent":["import {FC} from \"react\";\nimport './MarkersList.scss';\nimport {nanoid} from \"@reduxjs/toolkit\";\n\nconst MarkersList: FC<{ markersIntoView: google.maps.Marker[] | null | undefined}> = ({ markersIntoView }) => {\n\n    return(\n        <div className='markers-list'>\n            {\n                markersIntoView?.map((marker) => {\n                    const label = marker?.getLabel();\n                    if (label !== undefined) return <Item key={nanoid()} name={label}/>;\n                })\n            }\n        </div>\n    )\n}\n\nconst Item: FC<{ name: google.maps.MarkerLabel | string | null }> = ({ name }) => {\n    return(\n        <p className='markers-list__item'>\n            { name }\n        </p>\n    )\n}\n\nexport default MarkersList;","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../store/store\";\n\nexport const useTypedDispatch = () => useDispatch<AppDispatch>();\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import {Children, cloneElement, FC, isValidElement, useEffect, useRef, useState} from \"react\";\nimport './Map.scss';\nimport MarkersList from \"./MarkersList/MarkersList\";\nimport {useTypedSelector} from \"../../helpers/hooks\";\n\ninterface MapProps extends google.maps.MapOptions {\n    onDragEnd?: (e: google.maps.MapMouseEvent) => void\n    onIdle?: (map: google.maps.Map) => void;\n\n}\n\nconst getMarkersIntoView = (map: google.maps.Map, markers: google.maps.Marker[]): google.maps.Marker[] | null=> {\n    const bounds = map.getBounds();\n    const markersIntoView = markers.map(marker => {\n        const position = marker.getPosition();\n        if (position !== null && position !== undefined && bounds?.contains(position)) return marker;\n    });\n\n    // @ts-ignore\n    return markersIntoView && markersIntoView.length ? markersIntoView : null;\n}\n\nconst Map: FC<MapProps> = ({ onDragEnd, onIdle, children }) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [map, setMap] = useState<google.maps.Map>();\n    const [markersIntoView, setMarkersIntoView] = useState<google.maps.Marker[] | null>()\n    const markers = useTypedSelector(state => state.map.markers);\n\n    useEffect(() => {\n        if (ref.current && !map) {\n            setMap(new window.google.maps.Map(ref.current, {\n                center: {\n                    lat: 49.54,\n                    lng: 24.19\n                },\n                zoom: 5,\n            }));\n        }\n    }, [ref, map]);\n\n    useEffect(() => {\n        if (map) {\n            [\"dragend\", \"idle\"].forEach((eventName) =>\n                google.maps.event.clearListeners(map, eventName)\n            );\n\n            map.addListener(\"dragend\", onDragEnd || (() => setMarkersIntoView(getMarkersIntoView(map, markers))));\n            map.addListener(\"idle\", onIdle || (() => setMarkersIntoView(getMarkersIntoView(map, markers))));\n        }\n    }, [map, onDragEnd, onIdle]);\n\n    return(\n        <>\n            <div id=\"map-canvas\" ref={ref} />\n            {\n                Children.map(children, (child) => {\n                    if (isValidElement(child)) {\n                        return cloneElement(child, { map });\n                    }\n                })\n            }\n            { map && <MarkersList markersIntoView={markersIntoView} /> }\n        </>\n    )\n}\n\nexport default Map;","export const capitalsLtdLng = [\n    {\n        capital: 'Kiev',\n        ltd: '50.4500',\n        lng: '30.5233'\n    },\n    {\n        capital: 'Warsaw',\n        ltd: '52.2370',\n        lng: '21.0175'\n    },\n    {\n        capital: 'Prague',\n        ltd: '50.0736',\n        lng: '14.4185'\n    },\n    {\n        capital: 'Paris',\n        ltd: '48.8647',\n        lng: '2.3490'\n    },\n    {\n        capital: 'Berlin',\n        ltd: '52.5200',\n        lng: '13.4049'\n    },\n    {\n        capital: 'London',\n        ltd: '51.5098',\n        lng: '-0.1180'\n    },\n    {\n        capital: 'Madrid',\n        ltd: '40.4167',\n        lng: '-3.7037'\n    },\n    {\n        capital: 'Rome',\n        ltd: '41.9027',\n        lng: '12.4963'\n    },\n    {\n        capital: 'Washington',\n        ltd: '47.6080',\n        lng: '-122.3351'\n    },\n    {\n        capital: 'Canberra',\n        ltd: '-35.2820',\n        lng: '149.1289'\n    }\n]\n\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport isEqual from 'lodash.isequal';\n\ninterface MapState {\n    markers: google.maps.Marker[]\n}\nconst initialState: MapState = {\n    markers: []\n}\n\nconst mapSlice = createSlice({\n    name: 'map',\n    initialState,\n    reducers: {\n        addMarker: (state, action: PayloadAction<google.maps.Marker>) => {\n            const toDeepCompression = state.markers.find(marker => marker.getLabel() === action.payload.getLabel());\n            if (toDeepCompression && !isEqual(toDeepCompression, action.payload)) state.markers.push(action.payload);\n            else state.markers.push(action.payload);\n        },\n        removeMarkers: (state) => {\n            state.markers = [];\n        }\n    }\n})\n\nexport const { addMarker, removeMarkers } = mapSlice.actions;\n\nexport const mapReducer = mapSlice.reducer;","import {FC, useEffect, useState} from \"react\";\nimport {addMarker} from \"../../store/map.slice\";\nimport {useTypedDispatch} from \"../../helpers/hooks\";\n\nconst Marker: FC<google.maps.MarkerOptions> = (options) => {\n    const [marker, setMarker] = useState<google.maps.Marker>();\n    const dispatch = useTypedDispatch()\n\n    useEffect(() => {\n        if (!marker) {\n            const marker = new google.maps.Marker();\n            setMarker(marker);\n            dispatch(addMarker(marker))\n        }\n\n        return () => {\n            if (marker) {\n                marker.setMap(null);\n            }\n        };\n    }, [marker]);\n\n    useEffect(() => {\n        if (marker) {\n            marker.setOptions(options);\n        }\n    }, [marker, options]);\n\n    return null;\n};\n\nexport default Marker;","import { FC } from \"react\";\nimport './Main.scss';\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\nimport Map from \"../../components/Map/Map\";\nimport {capitalsLtdLng} from \"../../mocked_data/capitals-ltd-lng\";\nimport Marker from \"../../components/Marker/Marker\";\nimport {nanoid} from \"@reduxjs/toolkit\";\n\nconst Main: FC = () => {\n    return(\n        <Wrapper apiKey={'AIzaSyA1Ur3pM3ijbTxIUShujQedsYUL1qoSaE0'}>\n            <div className=\"main-page\">\n                <Map>\n                    {\n                        capitalsLtdLng.map(({ capital, ltd, lng}) => <Marker key={nanoid()} label={capital} position={{lng: +lng, lat: +ltd}}/>)\n                    }\n                </Map>\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './App.scss';\nimport Main from \"./pages/Main/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport { mapReducer } from \"./map.slice\";\n\nconst store = configureStore({\n    reducer: {\n        map: mapReducer\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}